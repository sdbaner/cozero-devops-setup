name: EKS Terraform Deployment
on:
 # push:
    #branches:
    #  - main
   # paths:
     # - 'terraform/eks_nodegroup/**'
  #pull_request:
  #  branches:
  #    - main
  workflow_dispatch:
    inputs:
      action:
        description: "Specify the Terraform action: apply or destroy"
        required: true
        default: "apply"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: eu-central-1

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash # Use the Bash shell regardless of the os
        working-directory: ./iac

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup terraform binary
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    #- name: Set up Terraform
    #  uses: hashicorp/setup-terraform@v1
    #  with:
    #    terraform_wrapper: false

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Initialize Terraform
      id: init
      run: terraform init -input=false

    - name: Validate Terraform
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      continue-on-error: true
      

    - name: Execute Terraform Action
      run: |
        if [ "${{ github.event.inputs.action }}" == "destroy" ]; then
          terraform destroy -auto-approve
        else
          terraform apply -auto-approve
        fi
